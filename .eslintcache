[{"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\index.js":"1","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\App.js":"2","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\reportWebVitals.js":"3","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\MainComponent.js":"4","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\HeaderComponent.js":"5","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\menuComponents.js":"6","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\FooterComponent.js":"7","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\DishdetailComponent.js":"8","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\dishes.js":"9","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\configureStore.js":"10","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\HomeComponent.js":"11","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\reducer.js":"12","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\ContactComponent.js":"13","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\AboutComponent.js":"14","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\leaders.js":"15","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\comments.js":"16","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\promotions.js":"17","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\comments.js":"18","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\dishes.js":"19","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\leaders.js":"20","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\promotions.js":"21","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\ActionTypes.js":"22","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\ActionCreators.js":"23","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\LoadingComponent.js":"24","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\forms.js":"25","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\baseUrl.js":"26"},{"size":659,"mtime":1611490059616,"results":"27","hashOfConfig":"28"},{"size":623,"mtime":1611576768963,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1611490059618,"results":"30","hashOfConfig":"28"},{"size":3577,"mtime":1611580370605,"results":"31","hashOfConfig":"28"},{"size":5056,"mtime":1611490059612,"results":"32","hashOfConfig":"28"},{"size":4357,"mtime":1611582157108,"results":"33","hashOfConfig":"28"},{"size":2564,"mtime":1611490059611,"results":"34","hashOfConfig":"28"},{"size":11011,"mtime":1611573500372,"results":"35","hashOfConfig":"28"},{"size":1490,"mtime":1611490059619,"results":"36","hashOfConfig":"28"},{"size":1041,"mtime":1611515999414,"results":"37","hashOfConfig":"28"},{"size":1628,"mtime":1611573420442,"results":"38","hashOfConfig":"28"},{"size":446,"mtime":1611489338006,"results":"39","hashOfConfig":"28"},{"size":12629,"mtime":1611515980480,"results":"40","hashOfConfig":"28"},{"size":4466,"mtime":1611490059610,"results":"41","hashOfConfig":"28"},{"size":2382,"mtime":1611490059619,"results":"42","hashOfConfig":"28"},{"size":4279,"mtime":1611490059618,"results":"43","hashOfConfig":"28"},{"size":445,"mtime":1611490059620,"results":"44","hashOfConfig":"28"},{"size":1185,"mtime":1611572932951,"results":"45","hashOfConfig":"28"},{"size":836,"mtime":1611511101619,"results":"46","hashOfConfig":"28"},{"size":185,"mtime":1611490648433,"results":"47","hashOfConfig":"28"},{"size":683,"mtime":1611572899541,"results":"48","hashOfConfig":"28"},{"size":413,"mtime":1611571474410,"results":"49","hashOfConfig":"28"},{"size":3186,"mtime":1611582009710,"results":"50","hashOfConfig":"28"},{"size":256,"mtime":1611508765157,"results":"51","hashOfConfig":"28"},{"size":170,"mtime":1611514947158,"results":"52","hashOfConfig":"28"},{"size":48,"mtime":1611571454910,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"ytoi1i",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\index.js",[],["114","115"],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\App.js",["116","117"],"import React, { Component } from 'react';\r\nimport {Navbar, NavbarBrand} from 'reactstrap';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport Main from \"./components/MainComponent\"\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n  render(){\r\n    // console.log(\"store\",store)\r\n    return (\r\n      <Provider store={store}>\r\n      <BrowserRouter>\r\n      <div>\r\n       <Main/>\r\n      </div>\r\n      </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\reportWebVitals.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\MainComponent.js",["118","119"],"import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Menu from './menuComponents';\r\nimport DishDetail from './DishdetailComponent';\r\n// import { DISHES } from '../shared/dishes';\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\n// import { LEADERS } from '../shared/leaders';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { addComment, addDishes, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(\"state\",state)\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    resetFeedbackForm: () =>  dispatch(actions.reset('feedback')),\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos())\r\n\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n\r\n//   onDishSelect(dishId) {\r\n//     this.setState({ selectedDish: dishId});\r\n//   }\r\n  \r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      console.log(\"printed render\")\r\n        return(\r\n          <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          />\r\n        );\r\n      }\r\n\r\n      const DishWithId = ({match}) => {\r\n        return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          addComment={this.props.addComment} />\r\n        );\r\n      };\r\n\r\n      \r\n      \r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n        <Route path='/home' component={HomePage} />\r\n        <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n        <Route path='/menu/:dishId' component={DishWithId} />\r\n        <Route exact path='/contactus' component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm}/> }/>\r\n        <Route path='/aboutus' component={()=> <About leaders={this.props.leaders}/>} />\r\n        <Redirect to=\"/home\" />\r\n\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n// export default Main;","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\menuComponents.js",["120","121","122"],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\FooterComponent.js",["123","124","125"],"import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\">Home</a></li>\r\n                        <li><a href=\"#\">About</a></li>\r\n                        <li><a href=\"#\">Menu</a></li>\r\n                        <li><a href=\"contactus.html\">Contact</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\DishdetailComponent.js",["126","127","128","129","130","131","132","133","134","135"],"import React, { Component, useState,useEffect } from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport { Card, CardImg, Button, FormGroup, Input, Form,Row, Col, Label, CardText,CardBody,CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n// const [isModalOpen, handleModal] = useState(false)\r\n\r\n\r\nconst required = (val) => {console.log(val && val.length,{val}); return val && val.length;}\r\nconst maxLength = (len) => (val) => {/*console.log({len,val});*/ return !(val) || (val.length <= len);}\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    function RenderDishComments(props){\r\n        const [isModalOpen, handleModal] = useState(false)\r\n        \r\n        // useEffect(() => {\r\n        //     console.log(\"useEffec being called again\")\r\n        // }, [isModalOpen])\r\n        \r\n\r\n        const handleComment = (e)=>{\r\n              handleModal(!isModalOpen)\r\n        }\r\n        \r\n        function handleSubmit(values) {\r\n            // console.log('Comment submitted is:' + JSON.stringify(values));\r\n            // alert('Comment submitted is: ' + JSON.stringify(values));\r\n            props.addComment(props.dishId, values.rating, values.author, values.comment)\r\n\r\n        }\r\n\r\n        const CommentForm=()=>{\r\n\r\n         return(    \r\n            <Modal isOpen={isModalOpen} toggle={()=>handleModal(!isModalOpen)}>\r\n            <ModalHeader toggle={handleComment}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n            <LocalForm onSubmit={(values) => handleSubmit(values)}>\r\n            <Label htmlFor=\"Rating\">Rating</Label>\r\n            <Row className=\"form-group\">\r\n                <Col md={12}>\r\n                <Control.select model=\".rating\" id=\"rating\" className=\"form-control\"\r\n                validators={{\r\n                    required\r\n                }}>\r\n                <option></option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n              </Control.select>\r\n              <Errors\r\n              className=\"text-danger\"\r\n              model=\".rating\"\r\n              show=\"touched\"\r\n              messages={{\r\n                  required: 'Required ',\r\n              }}/>\r\n                    \r\n                </Col>\r\n            </Row>\r\n            <Label htmlFor=\"author\">Your Name</Label>\r\n            <Row className=\"form-group\">\r\n                <Col md={12}>\r\n                   <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                        placeholder=\"Your Name\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                        }}\r\n                         />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".author\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required ',\r\n                            minLength: 'Must be greater than 2 characters',\r\n                            maxLength: 'Must be 15 characters or less'\r\n                        }}\r\n                     />\r\n                </Col>\r\n            </Row>\r\n            <Label htmlFor=\"comment\">Comment</Label>\r\n            <Row className=\"form-group\">\r\n                <Col md={12}>\r\n                   <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                        className=\"form-control\"\r\n                        rows=\"6\"\r\n                        validators={{\r\n                             maxLength: maxLength(150)\r\n                        }}\r\n                         />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".comment\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required',\r\n                            minLength: 'Must be greater than 2 characters',\r\n                            maxLength: 'Must be 100 characters or less'\r\n                        }}\r\n                     />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 0 }}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Send Feedback\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </LocalForm>\r\n                \r\n            </ModalBody>\r\n        </Modal>\r\n            )\r\n        }\r\n\r\n\r\n        if(props.DishComment!=null){\r\n         console.log(props.DishComment)\r\n         let idx = props.DishComment.length\r\n        let commentsAll = props.DishComment.map(\r\n            (cmts,index)=>(\r\n                    <div>\r\n                    <CardBody>\r\n                    <CardText>{cmts.comment}</CardText>\r\n                    <CardText>--{cmts.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(cmts.date)))}</CardText>\r\n                    {index==idx-1?<Button outline onClick={handleComment} ><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>:null}\r\n                    </CardBody>\r\n                    </div> \r\n                )\r\n        )\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                </div>\r\n                 {commentsAll}\r\n                 <CommentForm dishId={props.dishId} addComment={props.addComment}> </CommentForm>\r\n                 \r\n             </div>)\r\n            }\r\n            \r\n            // else\r\n            // return <div></div>\r\n    }\r\n\r\n    function renderDish(dish) {\r\n        if (dish != null)\r\n            return (\r\n            <div className=\"car\">\r\n                <div className=\"\">\r\n                    <Card>\r\n                    <CardImg top src={baseUrl+dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                        </Card>\r\n                        </div>\r\n\r\n                   </div>            \r\n            );\r\n        else\r\n            return (\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    const DishDetail = (props)=> {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish!=null)\r\n                {\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n            <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                      {renderDish(props.dish)}  \r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDishComments DishComment={props.comments} addComment={props.addComment}\r\n                    dishId={props.dish.id}>\r\n                    </RenderDishComments>\r\n                    </div>\r\n\r\n                    {}\r\n                      \r\n             </div>\r\n             </div>\r\n        )\r\n    }\r\n            }\r\n\r\nexport default DishDetail;\r\n\r\n\r\n\r\n// class DishDetail extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//     }\r\n    \r\n\r\n//     renderDishComments(DishComment){\r\n//         if(DishComment!=null){\r\n//          console.log({DishComment})\r\n//         let commentsAll = DishComment.comments.map(\r\n//             (cmts)=>(\r\n//                     <div>\r\n//                     <CardBody>\r\n//                     <CardText>{cmts.comment}</CardText>\r\n//                     <CardText>--{cmts.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(cmts.date)))}</CardText>\r\n//                     </CardBody>\r\n//                     </div> \r\n//                 )\r\n//         )\r\n\r\n//         return (\r\n//             <div>\r\n//                 <div>\r\n//                     <h4>Comments</h4>\r\n//                 </div>\r\n//                  {commentsAll}\r\n//              </div>)\r\n//             }\r\n            \r\n//             else\r\n//             return <div></div>\r\n//     }\r\n\r\n//     renderDish(dish) {\r\n//         if (dish != null)\r\n//             return (\r\n//             <div className=\"car\">\r\n//                 <div className=\"\">\r\n//                     <Card>\r\n//                     <CardImg top src={dish.image} alt={dish.name} />\r\n//                     <CardBody>\r\n//                       <CardTitle>{dish.name}</CardTitle>\r\n//                       <CardText>{dish.description}</CardText>\r\n//                     </CardBody>\r\n//                         </Card>\r\n//                         </div>\r\n\r\n//                    </div>            \r\n//             );\r\n//         else\r\n//             return (\r\n//                 <div></div>\r\n//             );\r\n//     }\r\n\r\n//     render() {\r\n//         console.log(this.props)\r\n//         let dataComments = this.props.dish;\r\n//         if(this.props.sendData!=null){\r\n//             console.log(12);\r\n//         }\r\n//         return (\r\n//             <div className=\"container\">\r\n//             <div className=\"row\">\r\n//                     <div className=\"col-12 col-md-5 m-1\">\r\n//                       {this.renderDish(this.props.dish)}  \r\n//                     </div>\r\n\r\n//                     <div className=\"col-12 col-md-5 m-1\">\r\n//                     {this.renderDishComments(this.props.dish)}\r\n//                     </div>\r\n                      \r\n//              </div>\r\n//              </div>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// export default DishDetail;\r\n\r\n","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\dishes.js",[],["136","137"],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\configureStore.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\reducer.js",[],["138","139"],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\ContactComponent.js",["140","141","142","143","144","145","146","147","148","149"],"\r\nimport React, { Component } from 'react';\r\n//import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors, actions, Form } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => {console.log(val && val.length,{val}); return val && val.length;}\r\nconst maxLength = (len) => (val) => {/*console.log({len,val});*/ return !(val) || (val.length <= len);}\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        //this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleBlur = this.handleBlur.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // validate(firstname, lastname, telnum, email) {\r\n    //     const errors = {\r\n    //         firstname: '',\r\n    //         lastname: '',\r\n    //         telnum: '',\r\n    //         email: ''\r\n    //     };\r\n    //     if (this.state.touched.firstname && firstname.length < 3)\r\n    //         errors.firstname = 'First Name should be >= 3 characters';\r\n    //     else if (this.state.touched.firstname && firstname.length > 10)\r\n    //         errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n    //     if (this.state.touched.lastname && lastname.length < 3)\r\n    //         errors.lastname = 'Last Name should be >= 3 characters';\r\n    //     else if (this.state.touched.lastname && lastname.length > 10)\r\n    //         errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if (this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n    //     if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n    //         errors.email = 'Email should contain a @';\r\n\r\n    //     return errors;\r\n    // }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <Form model= \"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                   <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder=\"Last Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                 />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".lastname\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                             />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                placeholder=\"Tel. Number\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                }}\r\n                                 />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".telnum\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 numbers',\r\n                                    maxLength: 'Must be 15 numbers or less',\r\n                                    isNumber: 'Must be a number'\r\n                                }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, validEmail\r\n                                }}\r\n                                 />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".email\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    validEmail: 'Invalid Email Address'\r\n                                }}\r\n                             />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                     </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\AboutComponent.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\leaders.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\comments.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\promotions.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\comments.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\dishes.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\leaders.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\promotions.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\ActionCreators.js",["150","151","152"],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\LoadingComponent.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\redux\\forms.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"161","line":2,"column":17,"nodeType":"159","messageId":"160","endLine":2,"endColumn":28},{"ruleId":"157","severity":1,"message":"162","line":16,"column":22,"nodeType":"159","messageId":"160","endLine":16,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":42,"column":3,"nodeType":"165","messageId":"166","endLine":45,"endColumn":4},{"ruleId":"157","severity":1,"message":"167","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"169","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":11,"column":29,"nodeType":"172","endLine":11,"endColumn":41},{"ruleId":"170","severity":1,"message":"171","line":12,"column":29,"nodeType":"172","endLine":12,"endColumn":41},{"ruleId":"170","severity":1,"message":"171","line":13,"column":29,"nodeType":"172","endLine":13,"endColumn":41},{"ruleId":"157","severity":1,"message":"167","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"173","line":1,"column":37,"nodeType":"159","messageId":"160","endLine":1,"endColumn":46},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"174","line":3,"column":33,"nodeType":"159","messageId":"160","endLine":3,"endColumn":42},{"ruleId":"157","severity":1,"message":"175","line":3,"column":44,"nodeType":"159","messageId":"160","endLine":3,"endColumn":49},{"ruleId":"157","severity":1,"message":"176","line":3,"column":51,"nodeType":"159","messageId":"160","endLine":3,"endColumn":55},{"ruleId":"177","severity":1,"message":"178","line":46,"column":17,"nodeType":"172","endLine":49,"endColumn":20},{"ruleId":"177","severity":1,"message":"179","line":70,"column":20,"nodeType":"172","endLine":76,"endColumn":28},{"ruleId":"177","severity":1,"message":"180","line":92,"column":20,"nodeType":"172","endLine":98,"endColumn":28},{"ruleId":"181","severity":1,"message":"182","line":135,"column":27,"nodeType":"183","messageId":"184","endLine":135,"endColumn":29},{"ruleId":"153","replacedBy":"185"},{"ruleId":"155","replacedBy":"186"},{"ruleId":"153","replacedBy":"187"},{"ruleId":"155","replacedBy":"188"},{"ruleId":"157","severity":1,"message":"189","line":5,"column":19,"nodeType":"159","messageId":"160","endLine":5,"endColumn":28},{"ruleId":"157","severity":1,"message":"190","line":5,"column":38,"nodeType":"159","messageId":"160","endLine":5,"endColumn":45},{"ruleId":"170","severity":1,"message":"191","line":119,"column":29,"nodeType":"172","endLine":119,"endColumn":71},{"ruleId":"177","severity":1,"message":"179","line":135,"column":36,"nodeType":"172","endLine":141,"endColumn":44},{"ruleId":"177","severity":1,"message":"179","line":157,"column":33,"nodeType":"172","endLine":163,"endColumn":36},{"ruleId":"177","severity":1,"message":"179","line":179,"column":33,"nodeType":"172","endLine":185,"endColumn":36},{"ruleId":"177","severity":1,"message":"179","line":202,"column":33,"nodeType":"172","endLine":208,"endColumn":36},{"ruleId":"177","severity":1,"message":"192","line":224,"column":45,"nodeType":"172","endLine":226,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":232,"column":37,"nodeType":"172","endLine":233,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":242,"column":37,"nodeType":"172","endLine":244,"endColumn":68},{"ruleId":"181","severity":1,"message":"182","line":30,"column":26,"nodeType":"183","messageId":"184","endLine":30,"endColumn":28},{"ruleId":"181","severity":1,"message":"182","line":66,"column":26,"nodeType":"183","messageId":"184","endLine":66,"endColumn":28},{"ruleId":"181","severity":1,"message":"182","line":100,"column":26,"nodeType":"183","messageId":"184","endLine":100,"endColumn":28},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavbarBrand' is defined but never used.","'addDishes' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'Media' is defined but never used.","'DishDetail' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Form' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["193"],["194"],["193"],["194"],"'LocalForm' is defined but never used.","'actions' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]