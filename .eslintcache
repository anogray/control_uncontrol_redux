[{"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\index.js":"1","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\reportWebVitals.js":"2","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\App.js":"3","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\menuComponents.js":"4","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\dishes.js":"5","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\MainComponent.js":"7","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\FooterComponent.js":"9"},{"size":639,"mtime":1610481282432,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":321,"mtime":1610477691854,"results":"13","hashOfConfig":"11"},{"size":3195,"mtime":1610479713055,"results":"14","hashOfConfig":"11"},{"size":6065,"mtime":1610375132141,"results":"15","hashOfConfig":"11"},{"size":4722,"mtime":1610480214081,"results":"16","hashOfConfig":"11"},{"size":833,"mtime":1610481491699,"results":"17","hashOfConfig":"11"},{"size":904,"mtime":1610481322590,"results":"18","hashOfConfig":"11"},{"size":2564,"mtime":1610481356018,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ytoi1i",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\index.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\reportWebVitals.js",[],["42","43"],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\App.js",["44","45","46"],"import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport './App.css';\n\nimport Main from \"./components/MainComponent\"\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n       <Main/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\menuComponents.js",["47","48","49","50","51"],"import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport {Card, CardImg, CardImgOverlay, CardText, CardBody,CardTitle} from 'reactstrap';\r\nimport DishDetail from './DishdetailComponent';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card\r\n            onClick={() => onClick(dish.id)}>\r\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n\r\n// class Menu extends Component {\r\n\r\n//     // constructor(props) {\r\n//     //     super(props);\r\n\r\n//     // //     this.state = {\r\n//     // //         selectedDish: null\r\n//     // //     }\r\n//     // }\r\n\r\n//     // onDishSelect(dish) {\r\n//     //     this.setState({ selectedDish: dish });\r\n//     // }\r\n\r\n//     // renderDish(dish) {\r\n//     //     if (dish != null)\r\n//     //         return (\r\n//     //         <div className=\"car\">\r\n//     //             <div className=\"\">\r\n//     //                 <Card>\r\n//     //                 <CardImg top src={dish.image} alt={dish.name} />\r\n//     //                 <CardBody>\r\n//     //                   <CardTitle>{dish.name}</CardTitle>\r\n//     //                   <CardText>{dish.description}</CardText>\r\n//     //                 </CardBody>\r\n//     //                     </Card>\r\n//     //                     </div>\r\n                        \r\n//     //                     <div className=\"co\"> \r\n//     //                     <Card>\r\n//     //                     hello\r\n//     //                     </Card>\r\n//     //                     </div>\r\n//     //                </div>            \r\n//     //         );\r\n//     //     else\r\n//     //         return (\r\n//     //             <div></div>\r\n//     //         );\r\n//     // }\r\n\r\n//     render() {\r\n//         const menu = this.props.dishes.map((dish) => {\r\n//             return (\r\n//                 <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n//                     <Card \r\n//                         onClick={() => this.props.onClick(dish.id)}>\r\n//                         <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n//                         <CardImgOverlay>\r\n//                             <CardTitle>{dish.name}</CardTitle>\r\n//                         </CardImgOverlay>\r\n//                     </Card>\r\n//                 </div>\r\n//             );\r\n//         });\r\n\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     {menu}\r\n//                 </div>\r\n                \r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Menu;","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\shared\\dishes.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\DishdetailComponent.js",["52","53","54"],"import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport {\r\n    Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\n\r\n    \r\n\r\n    function renderDishComments(DishComment){\r\n        if(DishComment!=null){\r\n         console.log({DishComment})\r\n        let commentsAll = DishComment.comments.map(\r\n            (cmts)=>(\r\n                    <div>\r\n                    <CardBody>\r\n                    <CardText>{cmts.comment}</CardText>\r\n                    <CardText>--{cmts.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(cmts.date)))}</CardText>\r\n                    </CardBody>\r\n                    </div> \r\n                )\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                </div>\r\n                 {commentsAll}\r\n             </div>)\r\n            }\r\n            \r\n            else\r\n            return <div></div>\r\n    }\r\n\r\n    function renderDish(dish) {\r\n        if (dish != null)\r\n            return (\r\n            <div className=\"car\">\r\n                <div className=\"\">\r\n                    <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                        </Card>\r\n                        </div>\r\n\r\n                   </div>            \r\n            );\r\n        else\r\n            return (\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    const DishDetail = (props)=> {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                      {renderDish(props.dish)}  \r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                    {renderDishComments(props.dish)}\r\n                    </div>\r\n                      \r\n             </div>\r\n             </div>\r\n        )\r\n    }\r\n\r\nexport default DishDetail;\r\n\r\n\r\n\r\n// class DishDetail extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//     }\r\n    \r\n\r\n//     renderDishComments(DishComment){\r\n//         if(DishComment!=null){\r\n//          console.log({DishComment})\r\n//         let commentsAll = DishComment.comments.map(\r\n//             (cmts)=>(\r\n//                     <div>\r\n//                     <CardBody>\r\n//                     <CardText>{cmts.comment}</CardText>\r\n//                     <CardText>--{cmts.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(cmts.date)))}</CardText>\r\n//                     </CardBody>\r\n//                     </div> \r\n//                 )\r\n//         )\r\n\r\n//         return (\r\n//             <div>\r\n//                 <div>\r\n//                     <h4>Comments</h4>\r\n//                 </div>\r\n//                  {commentsAll}\r\n//              </div>)\r\n//             }\r\n            \r\n//             else\r\n//             return <div></div>\r\n//     }\r\n\r\n//     renderDish(dish) {\r\n//         if (dish != null)\r\n//             return (\r\n//             <div className=\"car\">\r\n//                 <div className=\"\">\r\n//                     <Card>\r\n//                     <CardImg top src={dish.image} alt={dish.name} />\r\n//                     <CardBody>\r\n//                       <CardTitle>{dish.name}</CardTitle>\r\n//                       <CardText>{dish.description}</CardText>\r\n//                     </CardBody>\r\n//                         </Card>\r\n//                         </div>\r\n\r\n//                    </div>            \r\n//             );\r\n//         else\r\n//             return (\r\n//                 <div></div>\r\n//             );\r\n//     }\r\n\r\n//     render() {\r\n//         console.log(this.props)\r\n//         let dataComments = this.props.dish;\r\n//         if(this.props.sendData!=null){\r\n//             console.log(12);\r\n//         }\r\n//         return (\r\n//             <div className=\"container\">\r\n//             <div className=\"row\">\r\n//                     <div className=\"col-12 col-md-5 m-1\">\r\n//                       {this.renderDish(this.props.dish)}  \r\n//                     </div>\r\n\r\n//                     <div className=\"col-12 col-md-5 m-1\">\r\n//                     {this.renderDishComments(this.props.dish)}\r\n//                     </div>\r\n                      \r\n//              </div>\r\n//              </div>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// export default DishDetail;\r\n\r\n","D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\MainComponent.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Web_Dev\\Coursera\\front_end_full_stack\\confusion\\src\\components\\FooterComponent.js",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":28},{"ruleId":"62","severity":1,"message":"68","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"69","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":15},{"ruleId":"62","severity":1,"message":"70","line":4,"column":40,"nodeType":"64","messageId":"65","endLine":4,"endColumn":48},{"ruleId":"62","severity":1,"message":"71","line":4,"column":50,"nodeType":"64","messageId":"65","endLine":4,"endColumn":58},{"ruleId":"62","severity":1,"message":"72","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":18},{"ruleId":"62","severity":1,"message":"68","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"69","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":15},{"ruleId":"62","severity":1,"message":"73","line":5,"column":20,"nodeType":"64","messageId":"65","endLine":5,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":11,"column":29,"nodeType":"76","endLine":11,"endColumn":41},{"ruleId":"74","severity":1,"message":"75","line":12,"column":29,"nodeType":"76","endLine":12,"endColumn":41},{"ruleId":"74","severity":1,"message":"75","line":13,"column":29,"nodeType":"76","endLine":13,"endColumn":41},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'Component' is defined but never used.","'Media' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'DishDetail' is defined but never used.","'CardImgOverlay' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]